## 상위 5개 출력
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균 연비 = mean(고속도로))
## 컬럼을 제조사, 고속도로 선택
## 제조사로 그룹화
## 그룹화 연산 고속도로 평균
## 고속도로 내림차순 정렬
## 상위 5개 출력
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로))
## 컬럼을 제조사, 고속도로 선택
## 제조사로 그룹화
## 그룹화 연산 고속도로 평균
## 평균연비 내림차순 정렬
## 상위 5개 출력
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로)) %>%
arrange(desc(평균연비))
## 컬럼을 제조사, 고속도로 선택
## 제조사로 그룹화
## 그룹화 연산 고속도로 평균
## 평균연비 내림차순 정렬
## 상위 5개 출력
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로)) %>%
arrange(desc(평균연비)) %>%
head(5)
## 컬럼을 제조사, 고속도로 선택
## 제조사로 그룹화
## 그룹화 연산 고속도로 평균
## 평균연비 내림차순 정렬
## 상위 5개 출력
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로), na.rm=T) %>%
arrange(desc(평균연비)) %>%
head(5)
## 컬럼을 제조사, 고속도로 선택
## 제조사로 그룹화
## 그룹화 연산 고속도로 평균
## 평균연비 내림차순 정렬
## 상위 5개 출력
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로, na.rm=T)) %>%
arrange(desc(평균연비)) %>%
head(5)
mpg %>%
filter(!is.na(고속도로)) %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로)) %>%
arrange(desc(평균연비)) %>%
head(5)
## 배경 레이어 생성
ggplot(
data = mpg,
aes(
x = displ,
y = 고속도로
)
)
## 배경 레이어 생성
ggplot(
data = mpg,
aes(
x = displ,
y = 고속도로
)
) + geom_point()
## 배경 레이어 생성
ggplot(
data = mpg,
aes(
x = displ,
y = 고속도로
)
) + geom_point() + xlim(3,6)
## 막대 그래프
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로))
## 막대 그래프
mpg %>%
group_by(구동방식) %>%
summarise(
평균연비 = \
mean(고속도로, na.rm =T))
## 막대 그래프
mpg %>%
group_by(구동방식) %>%
summarise(
평균연비 = mean(
고속도로, na.rm =T))
## 막대 그래프
mpg %>%
group_by(구동방식) %>%
summarise(
평균연비 = mean(
고속도로, na.rm =T)) -> group_data
ggplot(
data = group_data,
aes(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar()
## 제조년도별 차량의 개수 라인 그래프
table(mpg$year)
mpg %>%
group_by(year) %>%
summarise(count = n())
mpg %>%
group_by(year) %>%
summarise(count = n()) -> group_data2
ggplot(
data = group_data2,
aes(
x = year,
y = count
)
) + geom_line()
ggplot(
data = economics,
aes(
x = date,
y = umemploy
)
) + geom_line()
ggplot(
data = economics,
aes(
x = date,
y = unemploy
)
) + geom_line()
View(economics)
mpg <- ggplot2::mpg
boxplot(mpg$hwy)
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + geom_boxplot()
## sav 파일을 로드
## foreign 라이브러리 설치
install.packages('foreign')
library(foreign)
read.spss("../csv/Koweps.sav")
welfare <- read.spss("../csv/Koweps.sav",
to.data.frame = T)
str(welfare)
View(welfare)
## 컬럼의 이름을 변경
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
income = p1002_8aq1,
code_job = h10_eco9
)
## 컬럼의 이름을 변경
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
income = p1002_8aq1,
code_job = h10_eco9
) -> welfare
## 특정 컬럼만 추출
welfare_copy <- welfare[c(
'gender', 'birth', 'income', 'code_job'
)]
## 결측치의 개수 확인
table(is.na(welfare_copy))
table(is.na(welfare_copy$gender))
table(is.na(welfare_copy$birth))
table(is.na(welfare_copy$income))
table(is.na(welfare_copy$code_job))
## 성별 데이터에서 이상치가 존재하는가?
table(welfare_copy$gender)
## gender 컬럼의 데이터가 1이면 'male'
## 1이 아니라면 'female'
ifelse(
welfare_copy$gender == 1,
'male',
'female'
)
## gender 컬럼의 데이터가 1이면 'male'
## 1이 아니라면 'female'
ifelse(
welfare_copy$gender == 1,
'male',
'female'
) -> welfare_copy$gender
table(welfare_copy$gender)
welfare_copy$income < 9999
## case1
## income 0보다 크고 9999보다 작은 경우
welfare_copy$income > 0 & welfare_copy$income < 9999
welfare_copy$income < 9999
## case1
## income 0보다 크고 9999보다 작은 경우
welfare_copy$income > 0 & welfare_copy$income < 9999
## case1
## income 0보다 크고 9999보다 작은 경우
welfare_copy$income > 0 & welfare_copy$income < 9999 -> flag
ifelse(
flag,
welfare_copy$income,
NA
)
## case2
## income 이 0이거나 9999라면
flag2 <- welfare_copy$income == 0 | welfare_copy$income == 9999
ifelse(
flag,
NA,
welfare_copy$income
)
ifelse(
flag2,
NA,
welfare_copy$income
)
## case3
## income 이 (0, 9999) 안에 포함되어 있으면
flag3 <- welfare_copy$income %in% c(0, 9999)
ifelse(
flag3,
NA,
welfare_copy$income
)
ifelse(
flag3,
NA,
welfare_copy$income
) -> welfare_copy$income
# filter() : income이 결측치인 데이터를 제거
# select() : gender, income 컬럼만 따로 추출
# group_by() : gender를 기준으로 그룹화
# summarise() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income))
# filter() : income이 결측치인 데이터를 제거
# select() : gender, income 컬럼만 따로 추출
# group_by() : gender를 기준으로 그룹화
# summarise() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender, income)
# filter() : income이 결측치인 데이터를 제거
# select() : gender, income 컬럼만 따로 추출
# group_by() : gender를 기준으로 그룹화
# summarise() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender, income) %>%
group_by(gender) %>%
summarise(mean_income = mean(income))
# filter() : income이 결측치인 데이터를 제거
# select() : gender, income 컬럼만 따로 추출
# group_by() : gender를 기준으로 그룹화
# summarise() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender, income) %>%
group_by(gender) %>%
summarise(mean_income = mean(income)) -> gender_data
ggplot(
data = gender_data,
aes(
x = gender,
y = mean_income
)
) + geom_col()
## 나이(age) 컬럼을 생성
## 데이터의 기준년도(2015) - birth
## welfare_copy에 저장
## income이 결측치인 데이터를 제거
## age, income만 추출
## age를 기준으로 그룹화
## 평균 임금 그룹화 연산
## 바형 그래프로 표시
welfare_copy %>%
mutate(age = 2015 - birth)
2015 - welfare_copy$birth
2015 - welfare_copy$birth -> welfare_copy$age
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income)
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_income = mean(income)) -> age_data
ggplot(
data = age_data,
aes(
x = age,
y = mean_income
)
) + geom_col()
## 평균 임금이 높은 상위 5개를 출력
age_data %>%
arrange(desc(mean_income))
## 평균 임금이 높은 상위 5개를 출력
age_data %>%
arrange(desc(mean_income)) %>%
head(5)
## 연령대(ageg) 컬럼을 추가
## 나이가 40미만이라면 young
## 나이가 40이상 60 미만이라면 middle
## 나이가 60이상이라면 old
## ageg, income 컬럼을 따로 추출
## ageg을 기준으로 그룹화
## 평균 임금을 그룹화 연산 (결측치를 제외)
ifelse(
welfare_copy$age < 40,
'young',
ifelse(
welfare_copy$age < 60,
'middle',
'old'
)
)
welfare_copy %>%
mutate(
ageg = ifelse(
age < 40, 'young',
ifelse(
age < 60, 'middle', 'old'
)
)
)
welfare_copy %>%
mutate(
ageg = ifelse(
age < 40, 'young',
ifelse(
age < 60, 'middle', 'old'
)
)
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(
mean_income = mean(income, na.rm = T)
)
welfare_copy %>%
mutate(
ageg = ifelse(
age < 40, 'young',
ifelse(
age < 60, 'middle', 'old'
)
)
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(
mean_income = mean(income, na.rm = T)
) -> ageg_data
## 바형 그래프로 표시
ggplot(
data = ageg_data,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
## 바형 그래프로 표시 (x축의 순서를 커스텀)
ggplot(
data = ageg_data,
aes(
x = ageg,
y = mean_income
)
) + geom_col() + scale_x_discrete(
limits = c('young', 'midlle', 'old')
)
## 바형 그래프로 표시 (x축의 순서를 커스텀)
ggplot(
data = ageg_data,
aes(
x = ageg,
y = mean_income
)
) + geom_col() + scale_x_discrete(
limits = c('young', 'middle', 'old')
)
## excel 파일을 로드 사용할 패키지를 설치
install.packages('readxl')
library(readxl)
read_excel("../csv/Koweps_Codebook.xlsx")
read_excel(
"../csv/Koweps_Codebook.xlsx", sheet = 2
)
read_excel(
"../csv/Koweps_Codebook.xlsx", sheet = 2
) -> code_book
## join 결합
## welfare_copy , code_book -> 기준이 컬럼(code_job)
left_join_data <- left_join(
welfare_copy,
code_book,
by='code_job'
)
str(left_join_data)
inner_join_data <- inner_join(
welfare_copy,
code_book,
by='code_job'
)
str(inner_join_data)
welfare_copy %>%
filter(is.na(code_job))
welfare_copy %>%
filter(is.na(code_job) & !is.na(income))
welfare_copy %>%
filter(!is.na(code_job) & is.na(income))
## 직업별 평균 임금이 높은 상위 5개
head(left_join_data,1)
left_join_data %>%
filter(!is.na(income)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%
head(5)
## 남성을 기준으로
left_join_data %>%
filter(!is.na(income) | gender == 'male' ) -> test
table(is.na(test$income))
## 남성을 기준으로
left_join_data %>%
filter(!is.na(income) & gender == 'male' ) -> test
table(is.na(test$income))
## 남성을 기준으로
left_join_data %>%
filter(!is.na(income) & gender == 'male' ) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
## 여성을 기준으로
left_join_data %>%
filter(!is.na(income) & gender == 'female' ) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
### income 데이터의 결측치를 0으로 대체
ifelse(
is.na(left_join_data$income),
0 ,
left_join_data$income
)
### income 데이터의 결측치를 0으로 대체
ifelse(
is.na(left_join_data$income),
0 ,
left_join_data$income
) -> left_join_data$income
## 남성을 기준으로
left_join_data %>%
filter(!is.na(income) & gender == 'male' ) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
## 여성을 기준으로
left_join_data %>%
filter(!is.na(income) & gender == 'female' ) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
left_join_data %>%
filter(gender == 'female' & !is.na(job)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%
head(5)
